{"ast":null,"code":"var _jsxFileName = \"F:\\\\TUGAS SEMESTER 4 UH FMIPA\\\\project web\\\\myapp\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Registrer.css'; // Assuming you've created a CSS file named RegistrationForm.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [fullName, setFullName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/register', {\n        full_name: fullName,\n        username,\n        password,\n        role: 'user' // Assuming a default role for new users\n      });\n      alert(response.data.msg);\n    } catch (error) {\n      console.error('Registration failed:', error.response.data);\n      alert('Registration failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"registration-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"fullName\",\n      children: \"Full Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Full Name\",\n      value: fullName,\n      onChange: e => setFullName(e.target.value),\n      className: \"registration-input registration-input-fullName\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"registration-input registration-input-username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"registration-input registration-input-password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"registration-button\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"y7oMDNHZlVWvS3q8G/HzH03OzC8=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","fullName","setFullName","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","response","post","full_name","role","alert","data","msg","error","console","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["F:/TUGAS SEMESTER 4 UH FMIPA/project web/myapp/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './Registrer.css'; // Assuming you've created a CSS file named RegistrationForm.css\r\n\r\nfunction Register() {\r\n  const [fullName, setFullName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/register', {\r\n        full_name: fullName,\r\n        username,\r\n        password,\r\n        role: 'user', // Assuming a default role for new users\r\n      });\r\n      alert(response.data.msg);\r\n    } catch (error) {\r\n      console.error('Registration failed:', error.response.data);\r\n      alert('Registration failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"registration-form\">\r\n      <label htmlFor=\"fullName\">Full Name</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Full Name\"\r\n        value={fullName}\r\n        onChange={(e) => setFullName(e.target.value)}\r\n        className=\"registration-input registration-input-fullName\"\r\n      />\r\n\r\n      <label htmlFor=\"username\">Username</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        className=\"registration-input registration-input-username\"\r\n      />\r\n\r\n      <label htmlFor=\"password\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        className=\"registration-input registration-input-password\"\r\n      />\r\n\r\n      <button type=\"submit\" className=\"registration-button\">\r\n        Register\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}